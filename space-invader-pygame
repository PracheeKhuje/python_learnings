#Space invador

import pygame # important to import this pip
import random
import math
from pygame import mixer
pygame.init() # initiate the pygame module

# Create background
background = pygame.image.load("spaceship_background.jpg")
# background sound
mixer.music.load("background.wav")
mixer.music.play(-1)
# create the screen
screen = pygame.display.set_mode((800,600))
pygame.display.set_caption("Space invadors")
icon = pygame.image.load("spaceship.png")
pygame.display.set_icon(icon)

#Player
playerImg = pygame.image.load("player.png")
playerX = 370
playerY = 480
playerX_change = 0
#Enemy
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
    enemyImg.append(pygame.image.load("enemy.png"))
    enemyX.append(random.randint(0,800))
    enemyY.append(random.randint(50,150))
    enemyX_change.append(4)
    enemyY_change.append(40)

# Adding a bullet
bulletImg = pygame.image.load("bullet.png")
bulletX = 0
bulletY = 480
bulletY_change = 10
bullet_state = "ready"

#Score
score_value = 0
font = pygame.font.Font('freesansbold.ttf',32)
over_font = pygame.font.Font('freesansbold.ttf', 50)

textX = 10
textY = 10

def show_score(x,y):
    score =font.render("Score: "+ str(score_value), True, (255,255,255))
    screen.blit(score, (x, y))

def game_over_text ():
    over_text = over_font.render("Game Over: ", True, (255, 255, 255))
    screen.blit(over_text, (200, 250))

# playerX -=0.1
# playerY+=0.1
def player(x,y):
    screen.blit(playerImg, (x, y))

def enemy(x,y,i):
    screen.blit(enemyImg[i], (x, y))

def fire_bullet(x,y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg,(x+16,y+10))

def isCollision(enemyX,enemyY,playerX,playerY):
    distance = math.sqrt((math.pow(enemyX-bulletX,2)) + (math.pow(enemyY-bulletY,2)))
    if distance < 27:
        return True
    else:
        return False
#Need to set an exit function so the window closes with our command on close button option
#Game loop
running = True
while running:
    #RGB - Red green blue - 0 to 255
    screen.fill((0, 0, 0))
    #background image
    screen.blit(background,(0,0))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            # print("A key is pressed")
            if event.key == pygame.K_LEFT:
                playerX_change -=5
            if event.key == pygame.K_RIGHT:
                playerX_change +=5
            if event.key == pygame.K_SPACE:
                bullet_sound = mixer.Sound("laser.wav")
                bullet_sound.play()
                # get the current co-ordinate of the bullet
                if bullet_state is "ready":
                    bulletX = playerX
                    fire_bullet(bulletX,bulletY)
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                # print
                playerX_change =0
    # Checking for boundries so  it doesnot go out of boundries
    playerX +=playerX_change
    # Limit spaceship to the window
    if playerX <= 0:
        playerX = 0
    if playerX >= 736:
        playerX = 736

    for i in range(num_of_enemies):
        # Game over
        if enemyY[i] >400:
            for j in range(num_of_enemies):
                enemyY[j] = 2000
            game_over_text()
            break

        enemyX[i] += enemyX_change[i]
    # Limit spaceship to the window
        if enemyX[i] <= 0:
            enemyY[i] += enemyY_change[i]
            enemyX_change[i] = 4

        elif enemyX[i] >= 736:
            enemyY[i] += enemyY_change[i]
            enemyX_change[i] = -4

        # Collision
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
        if collision:
            explosion_sound = mixer.Sound("explosion.wav")
            explosion_sound.play()
            bulletY = 480
            bullet_state = "ready"
            score_value += 1
            # print(score)
            enemyX[i] = random.randint(0, 800)
            enemyY[i] = random.randint(50, 150)
        enemy(enemyX[i], enemyY[i], i)

    # Bullet Movement
    if bulletY <= 0:
        bulletY = 480
        bullet_state = "ready"

    if bullet_state is "fire":
        fire_bullet(bulletX,bulletY)
        bulletY -=bulletY_change

    player(playerX,playerY)
    show_score(textX,textY)
    pygame.display.update()
